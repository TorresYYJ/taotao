package com.taotao.order.interceptor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.taotao.common.utils.CookieUtils;

/**
 * 判断用户是否登陆拦截器
 * @author yyj
 *
 */
public class LoginInterceptor implements HandlerInterceptor {
	
	@Value("${TOKEN_KEY}")
	private String TOKEN_KEY;

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		//执行handler之前先执行此方法
		//1.从cookie中取token信息
		CookieUtils.getCookieValue(request, TOKEN_KEY);
		//2.如果取不到token，跳转到sso的登陆页面，需要把当前请求的url作为参数传递给sso，sso登陆成功后跳转回请求的页面
		//3.取到token，调用sso系统的服务判断用户是否登陆
		//4.如果用户未登录，即没取到用户信息，跳转到sso登陆页面
		//5.如果取到用户信息，放行。
		//返回值true：放行  返回false：拦截
		return false;
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		//在handler执行之后，modelAndView返回之前
		
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
			throws Exception {
		//在modelAndView返回之后，异常处理
		
	}

}
